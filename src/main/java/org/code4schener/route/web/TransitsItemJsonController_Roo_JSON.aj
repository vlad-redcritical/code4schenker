// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.web;

import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.code4schener.route.domain.Transit;
import org.code4schener.route.service.api.TransitService;
import org.code4schener.route.web.TransitsItemJsonController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect TransitsItemJsonController_Roo_JSON {
    
    declare @type: TransitsItemJsonController: @RestController;
    
    declare @type: TransitsItemJsonController: @RequestMapping(value = "/api/transits/{transit}", name = "TransitsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private TransitService TransitsItemJsonController.transitService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param transitService
     */
    @Autowired
    public TransitsItemJsonController.new(TransitService transitService) {
        this.transitService = transitService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return TransitService
     */
    public TransitService TransitsItemJsonController.getTransitService() {
        return transitService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param transitService
     */
    public void TransitsItemJsonController.setTransitService(TransitService transitService) {
        this.transitService = transitService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Transit
     */
    @ModelAttribute
    public Transit TransitsItemJsonController.getTransit(@PathVariable("transit") Long id) {
        Transit transit = transitService.findOne(id);
        if (transit == null) {
            throw new NotFoundException(String.format("Transit with identifier '%s' not found",id));
        }
        return transit;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param transit
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> TransitsItemJsonController.show(@ModelAttribute Transit transit) {
        return ResponseEntity.ok(transit);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param transit
     * @return UriComponents
     */
    public static UriComponents TransitsItemJsonController.showURI(Transit transit) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(TransitsItemJsonController.class).show(transit))
            .buildAndExpand(transit.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedTransit
     * @param transit
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> TransitsItemJsonController.update(@ModelAttribute Transit storedTransit, @Valid @RequestBody Transit transit, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        transit.setId(storedTransit.getId());
        getTransitService().save(transit);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param transit
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> TransitsItemJsonController.delete(@ModelAttribute Transit transit) {
        getTransitService().delete(transit);
        return ResponseEntity.ok().build();
    }
    
}
