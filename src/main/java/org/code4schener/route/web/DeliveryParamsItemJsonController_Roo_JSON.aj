// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.web;

import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.code4schener.route.domain.DeliveryParam;
import org.code4schener.route.service.api.DeliveryParamService;
import org.code4schener.route.web.DeliveryParamsItemJsonController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect DeliveryParamsItemJsonController_Roo_JSON {
    
    declare @type: DeliveryParamsItemJsonController: @RestController;
    
    declare @type: DeliveryParamsItemJsonController: @RequestMapping(value = "/api/deliveryparams/{deliveryParam}", name = "DeliveryParamsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private DeliveryParamService DeliveryParamsItemJsonController.deliveryParamService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param deliveryParamService
     */
    @Autowired
    public DeliveryParamsItemJsonController.new(DeliveryParamService deliveryParamService) {
        this.deliveryParamService = deliveryParamService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return DeliveryParamService
     */
    public DeliveryParamService DeliveryParamsItemJsonController.getDeliveryParamService() {
        return deliveryParamService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParamService
     */
    public void DeliveryParamsItemJsonController.setDeliveryParamService(DeliveryParamService deliveryParamService) {
        this.deliveryParamService = deliveryParamService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return DeliveryParam
     */
    @ModelAttribute
    public DeliveryParam DeliveryParamsItemJsonController.getDeliveryParam(@PathVariable("deliveryParam") Long id) {
        DeliveryParam deliveryParam = deliveryParamService.findOne(id);
        if (deliveryParam == null) {
            throw new NotFoundException(String.format("DeliveryParam with identifier '%s' not found",id));
        }
        return deliveryParam;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> DeliveryParamsItemJsonController.show(@ModelAttribute DeliveryParam deliveryParam) {
        return ResponseEntity.ok(deliveryParam);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     * @return UriComponents
     */
    public static UriComponents DeliveryParamsItemJsonController.showURI(DeliveryParam deliveryParam) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(DeliveryParamsItemJsonController.class).show(deliveryParam))
            .buildAndExpand(deliveryParam.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedDeliveryParam
     * @param deliveryParam
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> DeliveryParamsItemJsonController.update(@ModelAttribute DeliveryParam storedDeliveryParam, @Valid @RequestBody DeliveryParam deliveryParam, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        deliveryParam.setId(storedDeliveryParam.getId());
        getDeliveryParamService().save(deliveryParam);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> DeliveryParamsItemJsonController.delete(@ModelAttribute DeliveryParam deliveryParam) {
        getDeliveryParamService().delete(deliveryParam);
        return ResponseEntity.ok().build();
    }
    
}
