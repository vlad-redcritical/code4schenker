// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.web;

import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.code4schener.route.domain.LocationLog;
import org.code4schener.route.service.api.LocationLogService;
import org.code4schener.route.web.LocationLogsItemJsonController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect LocationLogsItemJsonController_Roo_JSON {
    
    declare @type: LocationLogsItemJsonController: @RestController;
    
    declare @type: LocationLogsItemJsonController: @RequestMapping(value = "/api/locationlogs/{locationLog}", name = "LocationLogsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private LocationLogService LocationLogsItemJsonController.locationLogService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param locationLogService
     */
    @Autowired
    public LocationLogsItemJsonController.new(LocationLogService locationLogService) {
        this.locationLogService = locationLogService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return LocationLogService
     */
    public LocationLogService LocationLogsItemJsonController.getLocationLogService() {
        return locationLogService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLogService
     */
    public void LocationLogsItemJsonController.setLocationLogService(LocationLogService locationLogService) {
        this.locationLogService = locationLogService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return LocationLog
     */
    @ModelAttribute
    public LocationLog LocationLogsItemJsonController.getLocationLog(@PathVariable("locationLog") Long id) {
        LocationLog locationLog = locationLogService.findOne(id);
        if (locationLog == null) {
            throw new NotFoundException(String.format("LocationLog with identifier '%s' not found",id));
        }
        return locationLog;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLog
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> LocationLogsItemJsonController.show(@ModelAttribute LocationLog locationLog) {
        return ResponseEntity.ok(locationLog);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLog
     * @return UriComponents
     */
    public static UriComponents LocationLogsItemJsonController.showURI(LocationLog locationLog) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(LocationLogsItemJsonController.class).show(locationLog))
            .buildAndExpand(locationLog.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedLocationLog
     * @param locationLog
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> LocationLogsItemJsonController.update(@ModelAttribute LocationLog storedLocationLog, @Valid @RequestBody LocationLog locationLog, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        locationLog.setId(storedLocationLog.getId());
        getLocationLogService().save(locationLog);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLog
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> LocationLogsItemJsonController.delete(@ModelAttribute LocationLog locationLog) {
        getLocationLogService().delete(locationLog);
        return ResponseEntity.ok().build();
    }
    
}
