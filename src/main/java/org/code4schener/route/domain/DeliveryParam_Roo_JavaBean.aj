// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.domain;

import java.util.Objects;
import java.util.Set;
import org.code4schener.route.domain.Delivery;
import org.code4schener.route.domain.DeliveryParam;
import org.code4schener.route.domain.ParamLog;

privileged aspect DeliveryParam_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long DeliveryParam.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParam.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer DeliveryParam.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParam.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets paramName value
     * 
     * @return String
     */
    public String DeliveryParam.getParamName() {
        return this.paramName;
    }
    
    /**
     * Sets paramName value
     * 
     * @param paramName
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParam.setParamName(String paramName) {
        this.paramName = paramName;
        return this;
    }
    
    /**
     * Gets minValue value
     * 
     * @return Float
     */
    public Float DeliveryParam.getMinValue() {
        return this.minValue;
    }
    
    /**
     * Sets minValue value
     * 
     * @param minValue
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParam.setMinValue(Float minValue) {
        this.minValue = minValue;
        return this;
    }
    
    /**
     * Gets maxValue value
     * 
     * @return Float
     */
    public Float DeliveryParam.getMaxValue() {
        return this.maxValue;
    }
    
    /**
     * Sets maxValue value
     * 
     * @param maxValue
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParam.setMaxValue(Float maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    /**
     * Gets unit value
     * 
     * @return String
     */
    public String DeliveryParam.getUnit() {
        return this.unit;
    }
    
    /**
     * Sets unit value
     * 
     * @param unit
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParam.setUnit(String unit) {
        this.unit = unit;
        return this;
    }
    
    /**
     * Gets delivery value
     * 
     * @return Delivery
     */
    public Delivery DeliveryParam.getDelivery() {
        return this.delivery;
    }
    
    /**
     * Sets delivery value
     * 
     * @param delivery
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParam.setDelivery(Delivery delivery) {
        this.delivery = delivery;
        return this;
    }
    
    /**
     * Gets logParams value
     * 
     * @return Set
     */
    public Set<ParamLog> DeliveryParam.getLogParams() {
        return this.logParams;
    }
    
    /**
     * Sets logParams value
     * 
     * @param logParams
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParam.setLogParams(Set<ParamLog> logParams) {
        this.logParams = logParams;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean DeliveryParam.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof DeliveryParam)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((DeliveryParam) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int DeliveryParam.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String DeliveryParam.toString() {
        return "DeliveryParam {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", paramName='" + paramName + '\'' + 
                ", minValue='" + minValue + '\'' + 
                ", maxValue='" + maxValue + '\'' + 
                ", unit='" + unit + '\'' + "}" + super.toString();
    }
    
}
