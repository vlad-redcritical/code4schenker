// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.domain;

import java.util.Objects;
import org.code4schener.route.domain.Delivery;
import org.code4schener.route.domain.DeliveryParam;
import org.code4schener.route.domain.LocationLog;
import org.code4schener.route.domain.ParamLog;

privileged aspect ParamLog_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long ParamLog.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return ParamLog
     */
    public ParamLog ParamLog.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer ParamLog.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return ParamLog
     */
    public ParamLog ParamLog.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets paramName value
     * 
     * @return String
     */
    public String ParamLog.getParamName() {
        return this.paramName;
    }
    
    /**
     * Sets paramName value
     * 
     * @param paramName
     * @return ParamLog
     */
    public ParamLog ParamLog.setParamName(String paramName) {
        this.paramName = paramName;
        return this;
    }
    
    /**
     * Gets paramValue value
     * 
     * @return Float
     */
    public Float ParamLog.getParamValue() {
        return this.paramValue;
    }
    
    /**
     * Sets paramValue value
     * 
     * @param paramValue
     * @return ParamLog
     */
    public ParamLog ParamLog.setParamValue(Float paramValue) {
        this.paramValue = paramValue;
        return this;
    }
    
    /**
     * Gets delivery value
     * 
     * @return Delivery
     */
    public Delivery ParamLog.getDelivery() {
        return this.delivery;
    }
    
    /**
     * Sets delivery value
     * 
     * @param delivery
     * @return ParamLog
     */
    public ParamLog ParamLog.setDelivery(Delivery delivery) {
        this.delivery = delivery;
        return this;
    }
    
    /**
     * Gets location value
     * 
     * @return LocationLog
     */
    public LocationLog ParamLog.getLocation() {
        return this.location;
    }
    
    /**
     * Sets location value
     * 
     * @param location
     * @return ParamLog
     */
    public ParamLog ParamLog.setLocation(LocationLog location) {
        this.location = location;
        return this;
    }
    
    /**
     * Gets deliveryParam value
     * 
     * @return DeliveryParam
     */
    public DeliveryParam ParamLog.getDeliveryParam() {
        return this.deliveryParam;
    }
    
    /**
     * Sets deliveryParam value
     * 
     * @param deliveryParam
     * @return ParamLog
     */
    public ParamLog ParamLog.setDeliveryParam(DeliveryParam deliveryParam) {
        this.deliveryParam = deliveryParam;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean ParamLog.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof ParamLog)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((ParamLog) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int ParamLog.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String ParamLog.toString() {
        return "ParamLog {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", paramName='" + paramName + '\'' + 
                ", paramValue='" + paramValue + '\'' + "}" + super.toString();
    }
    
}
