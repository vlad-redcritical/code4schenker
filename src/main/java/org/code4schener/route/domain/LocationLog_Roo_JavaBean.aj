// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.domain;

import java.util.Objects;
import java.util.Set;
import org.code4schener.route.domain.LocationLog;
import org.code4schener.route.domain.ParamLog;

privileged aspect LocationLog_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long LocationLog.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return LocationLog
     */
    public LocationLog LocationLog.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer LocationLog.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return LocationLog
     */
    public LocationLog LocationLog.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets dateTime value
     * 
     * @return String
     */
    public String LocationLog.getDateTime() {
        return this.dateTime;
    }
    
    /**
     * Sets dateTime value
     * 
     * @param dateTime
     * @return LocationLog
     */
    public LocationLog LocationLog.setDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    /**
     * Gets longitude value
     * 
     * @return String
     */
    public String LocationLog.getLongitude() {
        return this.longitude;
    }
    
    /**
     * Sets longitude value
     * 
     * @param longitude
     * @return LocationLog
     */
    public LocationLog LocationLog.setLongitude(String longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * Gets latitude value
     * 
     * @return String
     */
    public String LocationLog.getLatitude() {
        return this.latitude;
    }
    
    /**
     * Sets latitude value
     * 
     * @param latitude
     * @return LocationLog
     */
    public LocationLog LocationLog.setLatitude(String latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * Gets params value
     * 
     * @return Set
     */
    public Set<ParamLog> LocationLog.getParams() {
        return this.params;
    }
    
    /**
     * Sets params value
     * 
     * @param params
     * @return LocationLog
     */
    public LocationLog LocationLog.setParams(Set<ParamLog> params) {
        this.params = params;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean LocationLog.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof LocationLog)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((LocationLog) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int LocationLog.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String LocationLog.toString() {
        return "LocationLog {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", dateTime='" + dateTime + '\'' + 
                ", longitude='" + longitude + '\'' + 
                ", latitude='" + latitude + '\'' + "}" + super.toString();
    }
    
}
