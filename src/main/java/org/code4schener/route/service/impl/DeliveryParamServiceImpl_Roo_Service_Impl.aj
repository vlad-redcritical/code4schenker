// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.service.impl;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.code4schener.route.domain.Delivery;
import org.code4schener.route.domain.DeliveryParam;
import org.code4schener.route.domain.ParamLog;
import org.code4schener.route.repository.DeliveryParamRepository;
import org.code4schener.route.service.api.ParamLogService;
import org.code4schener.route.service.impl.DeliveryParamServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect DeliveryParamServiceImpl_Roo_Service_Impl {
    
    declare @type: DeliveryParamServiceImpl: @Service;
    
    declare @type: DeliveryParamServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private DeliveryParamRepository DeliveryParamServiceImpl.deliveryParamRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ParamLogService DeliveryParamServiceImpl.paramLogService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param deliveryParamRepository
     * @param paramLogService
     */
    @Autowired
    public DeliveryParamServiceImpl.new(DeliveryParamRepository deliveryParamRepository, @Lazy ParamLogService paramLogService) {
        setDeliveryParamRepository(deliveryParamRepository);
        setParamLogService(paramLogService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return DeliveryParamRepository
     */
    public DeliveryParamRepository DeliveryParamServiceImpl.getDeliveryParamRepository() {
        return deliveryParamRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParamRepository
     */
    public void DeliveryParamServiceImpl.setDeliveryParamRepository(DeliveryParamRepository deliveryParamRepository) {
        this.deliveryParamRepository = deliveryParamRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ParamLogService
     */
    public ParamLogService DeliveryParamServiceImpl.getParamLogService() {
        return paramLogService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param paramLogService
     */
    public void DeliveryParamServiceImpl.setParamLogService(ParamLogService paramLogService) {
        this.paramLogService = paramLogService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryparam
     * @return Map
     */
    public Map<String, List<MessageI18n>> DeliveryParamServiceImpl.validate(DeliveryParam deliveryparam) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     * @param logParamsToAdd
     * @return DeliveryParam
     */
    @Transactional
    public DeliveryParam DeliveryParamServiceImpl.addToLogParams(DeliveryParam deliveryParam, Iterable<Long> logParamsToAdd) {
        List<ParamLog> logParams = getParamLogService().findAll(logParamsToAdd);
        deliveryParam.addToLogParams(logParams);
        return getDeliveryParamRepository().save(deliveryParam);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     * @param logParamsToRemove
     * @return DeliveryParam
     */
    @Transactional
    public DeliveryParam DeliveryParamServiceImpl.removeFromLogParams(DeliveryParam deliveryParam, Iterable<Long> logParamsToRemove) {
        List<ParamLog> logParams = getParamLogService().findAll(logParamsToRemove);
        deliveryParam.removeFromLogParams(logParams);
        return getDeliveryParamRepository().save(deliveryParam);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     * @param logParams
     * @return DeliveryParam
     */
    @Transactional
    public DeliveryParam DeliveryParamServiceImpl.setLogParams(DeliveryParam deliveryParam, Iterable<Long> logParams) {
        List<ParamLog> items = getParamLogService().findAll(logParams);
        Set<ParamLog> currents = deliveryParam.getLogParams();
        Set<ParamLog> toRemove = new HashSet<ParamLog>();
        for (Iterator<ParamLog> iterator = currents.iterator(); iterator.hasNext();) {
            ParamLog nextParamLog = iterator.next();
            if (items.contains(nextParamLog)) {
                items.remove(nextParamLog);
            } else {
                toRemove.add(nextParamLog);
            }
        }
        deliveryParam.removeFromLogParams(toRemove);
        deliveryParam.addToLogParams(items);
        // Force the version update of the parent side to know that the parent has changed
        // because it has new books assigned
        deliveryParam.setVersion(deliveryParam.getVersion() + 1);
        return getDeliveryParamRepository().save(deliveryParam);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     */
    @Transactional
    public void DeliveryParamServiceImpl.delete(DeliveryParam deliveryParam) {
        // Clear bidirectional many-to-one child relationship with Delivery
        if (deliveryParam.getDelivery() != null) {
            deliveryParam.getDelivery().getDeliveryParams().remove(deliveryParam);
        }
        
        // Clear bidirectional one-to-many parent relationship with ParamLog
        for (ParamLog item : deliveryParam.getLogParams()) {
            item.setDeliveryParam(null);
        }
        
        getDeliveryParamRepository().delete(deliveryParam);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<DeliveryParam> DeliveryParamServiceImpl.save(Iterable<DeliveryParam> entities) {
        return getDeliveryParamRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void DeliveryParamServiceImpl.delete(Iterable<Long> ids) {
        List<DeliveryParam> toDelete = getDeliveryParamRepository().findAll(ids);
        getDeliveryParamRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return DeliveryParam
     */
    @Transactional
    public DeliveryParam DeliveryParamServiceImpl.save(DeliveryParam entity) {
        return getDeliveryParamRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParamServiceImpl.findOne(Long id) {
        return getDeliveryParamRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return DeliveryParam
     */
    public DeliveryParam DeliveryParamServiceImpl.findOneForUpdate(Long id) {
        return getDeliveryParamRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<DeliveryParam> DeliveryParamServiceImpl.findAll(Iterable<Long> ids) {
        return getDeliveryParamRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<DeliveryParam> DeliveryParamServiceImpl.findAll() {
        return getDeliveryParamRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long DeliveryParamServiceImpl.count() {
        return getDeliveryParamRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DeliveryParam> DeliveryParamServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getDeliveryParamRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DeliveryParam> DeliveryParamServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getDeliveryParamRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param delivery
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DeliveryParam> DeliveryParamServiceImpl.findByDelivery(Delivery delivery, GlobalSearch globalSearch, Pageable pageable) {
        return getDeliveryParamRepository().findByDelivery(delivery, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param delivery
     * @return Long
     */
    public long DeliveryParamServiceImpl.countByDelivery(Delivery delivery) {
        return getDeliveryParamRepository().countByDelivery(delivery);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<DeliveryParam> DeliveryParamServiceImpl.getEntityType() {
        return DeliveryParam.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> DeliveryParamServiceImpl.getIdType() {
        return Long.class;
    }
    
}
