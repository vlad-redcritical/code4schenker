// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.service.impl;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.code4schener.route.domain.LocationLog;
import org.code4schener.route.domain.ParamLog;
import org.code4schener.route.repository.LocationLogRepository;
import org.code4schener.route.service.api.ParamLogService;
import org.code4schener.route.service.impl.LocationLogServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect LocationLogServiceImpl_Roo_Service_Impl {
    
    declare @type: LocationLogServiceImpl: @Service;
    
    declare @type: LocationLogServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private LocationLogRepository LocationLogServiceImpl.locationLogRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ParamLogService LocationLogServiceImpl.paramLogService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param locationLogRepository
     * @param paramLogService
     */
    @Autowired
    public LocationLogServiceImpl.new(LocationLogRepository locationLogRepository, @Lazy ParamLogService paramLogService) {
        setLocationLogRepository(locationLogRepository);
        setParamLogService(paramLogService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return LocationLogRepository
     */
    public LocationLogRepository LocationLogServiceImpl.getLocationLogRepository() {
        return locationLogRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLogRepository
     */
    public void LocationLogServiceImpl.setLocationLogRepository(LocationLogRepository locationLogRepository) {
        this.locationLogRepository = locationLogRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ParamLogService
     */
    public ParamLogService LocationLogServiceImpl.getParamLogService() {
        return paramLogService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param paramLogService
     */
    public void LocationLogServiceImpl.setParamLogService(ParamLogService paramLogService) {
        this.paramLogService = paramLogService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationlog
     * @return Map
     */
    public Map<String, List<MessageI18n>> LocationLogServiceImpl.validate(LocationLog locationlog) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLog
     * @param paramsToAdd
     * @return LocationLog
     */
    @Transactional
    public LocationLog LocationLogServiceImpl.addToParams(LocationLog locationLog, Iterable<Long> paramsToAdd) {
        List<ParamLog> params = getParamLogService().findAll(paramsToAdd);
        locationLog.addToParams(params);
        return getLocationLogRepository().save(locationLog);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLog
     * @param paramsToRemove
     * @return LocationLog
     */
    @Transactional
    public LocationLog LocationLogServiceImpl.removeFromParams(LocationLog locationLog, Iterable<Long> paramsToRemove) {
        List<ParamLog> params = getParamLogService().findAll(paramsToRemove);
        locationLog.removeFromParams(params);
        return getLocationLogRepository().save(locationLog);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLog
     * @param params
     * @return LocationLog
     */
    @Transactional
    public LocationLog LocationLogServiceImpl.setParams(LocationLog locationLog, Iterable<Long> params) {
        List<ParamLog> items = getParamLogService().findAll(params);
        Set<ParamLog> currents = locationLog.getParams();
        Set<ParamLog> toRemove = new HashSet<ParamLog>();
        for (Iterator<ParamLog> iterator = currents.iterator(); iterator.hasNext();) {
            ParamLog nextParamLog = iterator.next();
            if (items.contains(nextParamLog)) {
                items.remove(nextParamLog);
            } else {
                toRemove.add(nextParamLog);
            }
        }
        locationLog.removeFromParams(toRemove);
        locationLog.addToParams(items);
        // Force the version update of the parent side to know that the parent has changed
        // because it has new books assigned
        locationLog.setVersion(locationLog.getVersion() + 1);
        return getLocationLogRepository().save(locationLog);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param locationLog
     */
    @Transactional
    public void LocationLogServiceImpl.delete(LocationLog locationLog) {
        // Clear bidirectional one-to-many parent relationship with ParamLog
        for (ParamLog item : locationLog.getParams()) {
            item.setLocation(null);
        }
        
        getLocationLogRepository().delete(locationLog);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<LocationLog> LocationLogServiceImpl.save(Iterable<LocationLog> entities) {
        return getLocationLogRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void LocationLogServiceImpl.delete(Iterable<Long> ids) {
        List<LocationLog> toDelete = getLocationLogRepository().findAll(ids);
        getLocationLogRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return LocationLog
     */
    @Transactional
    public LocationLog LocationLogServiceImpl.save(LocationLog entity) {
        return getLocationLogRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return LocationLog
     */
    public LocationLog LocationLogServiceImpl.findOne(Long id) {
        return getLocationLogRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return LocationLog
     */
    public LocationLog LocationLogServiceImpl.findOneForUpdate(Long id) {
        return getLocationLogRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<LocationLog> LocationLogServiceImpl.findAll(Iterable<Long> ids) {
        return getLocationLogRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<LocationLog> LocationLogServiceImpl.findAll() {
        return getLocationLogRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long LocationLogServiceImpl.count() {
        return getLocationLogRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<LocationLog> LocationLogServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getLocationLogRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<LocationLog> LocationLogServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getLocationLogRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<LocationLog> LocationLogServiceImpl.getEntityType() {
        return LocationLog.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> LocationLogServiceImpl.getIdType() {
        return Long.class;
    }
    
}
