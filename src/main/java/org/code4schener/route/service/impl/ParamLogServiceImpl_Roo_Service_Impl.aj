// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.code4schener.route.service.impl;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.code4schener.route.domain.Delivery;
import org.code4schener.route.domain.DeliveryParam;
import org.code4schener.route.domain.LocationLog;
import org.code4schener.route.domain.ParamLog;
import org.code4schener.route.repository.ParamLogRepository;
import org.code4schener.route.service.impl.ParamLogServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ParamLogServiceImpl_Roo_Service_Impl {
    
    declare @type: ParamLogServiceImpl: @Service;
    
    declare @type: ParamLogServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ParamLogRepository ParamLogServiceImpl.paramLogRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param paramLogRepository
     */
    @Autowired
    public ParamLogServiceImpl.new(ParamLogRepository paramLogRepository) {
        setParamLogRepository(paramLogRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ParamLogRepository
     */
    public ParamLogRepository ParamLogServiceImpl.getParamLogRepository() {
        return paramLogRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param paramLogRepository
     */
    public void ParamLogServiceImpl.setParamLogRepository(ParamLogRepository paramLogRepository) {
        this.paramLogRepository = paramLogRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param paramlog
     * @return Map
     */
    public Map<String, List<MessageI18n>> ParamLogServiceImpl.validate(ParamLog paramlog) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param paramLog
     */
    @Transactional
    public void ParamLogServiceImpl.delete(ParamLog paramLog) {
        // Clear bidirectional many-to-one child relationship with Delivery
        if (paramLog.getDelivery() != null) {
            paramLog.getDelivery().getParams().remove(paramLog);
        }
        
        // Clear bidirectional many-to-one child relationship with LocationLog
        if (paramLog.getLocation() != null) {
            paramLog.getLocation().getParams().remove(paramLog);
        }
        
        // Clear bidirectional many-to-one child relationship with DeliveryParam
        if (paramLog.getDeliveryParam() != null) {
            paramLog.getDeliveryParam().getLogParams().remove(paramLog);
        }
        
        getParamLogRepository().delete(paramLog);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<ParamLog> ParamLogServiceImpl.save(Iterable<ParamLog> entities) {
        return getParamLogRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ParamLogServiceImpl.delete(Iterable<Long> ids) {
        List<ParamLog> toDelete = getParamLogRepository().findAll(ids);
        getParamLogRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return ParamLog
     */
    @Transactional
    public ParamLog ParamLogServiceImpl.save(ParamLog entity) {
        return getParamLogRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ParamLog
     */
    public ParamLog ParamLogServiceImpl.findOne(Long id) {
        return getParamLogRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ParamLog
     */
    public ParamLog ParamLogServiceImpl.findOneForUpdate(Long id) {
        return getParamLogRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<ParamLog> ParamLogServiceImpl.findAll(Iterable<Long> ids) {
        return getParamLogRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<ParamLog> ParamLogServiceImpl.findAll() {
        return getParamLogRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ParamLogServiceImpl.count() {
        return getParamLogRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ParamLog> ParamLogServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getParamLogRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ParamLog> ParamLogServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getParamLogRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param delivery
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ParamLog> ParamLogServiceImpl.findByDelivery(Delivery delivery, GlobalSearch globalSearch, Pageable pageable) {
        return getParamLogRepository().findByDelivery(delivery, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ParamLog> ParamLogServiceImpl.findByDeliveryParam(DeliveryParam deliveryParam, GlobalSearch globalSearch, Pageable pageable) {
        return getParamLogRepository().findByDeliveryParam(deliveryParam, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param location
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ParamLog> ParamLogServiceImpl.findByLocation(LocationLog location, GlobalSearch globalSearch, Pageable pageable) {
        return getParamLogRepository().findByLocation(location, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param delivery
     * @return Long
     */
    public long ParamLogServiceImpl.countByDelivery(Delivery delivery) {
        return getParamLogRepository().countByDelivery(delivery);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param deliveryParam
     * @return Long
     */
    public long ParamLogServiceImpl.countByDeliveryParam(DeliveryParam deliveryParam) {
        return getParamLogRepository().countByDeliveryParam(deliveryParam);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param location
     * @return Long
     */
    public long ParamLogServiceImpl.countByLocation(LocationLog location) {
        return getParamLogRepository().countByLocation(location);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<ParamLog> ParamLogServiceImpl.getEntityType() {
        return ParamLog.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ParamLogServiceImpl.getIdType() {
        return Long.class;
    }
    
}
